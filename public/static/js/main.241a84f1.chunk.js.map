{"version":3,"sources":["store/atom.js","store/hook.js","components/header/index.jsx","components/hero/index.jsx","components/login/index.jsx","components/login/util/authenticate.js","components/register/index.jsx","components/register/util/registerUser.js","utils/pages.js","components/sidebar/index.jsx","components/main/index.jsx","components/util/protectedRoute/index.jsx","components/util/redirectIfLoggedIn/index.jsx","App.js","serviceWorker.js","index.js"],"names":["sidebarState","atom","key","default","user","useUser","useRecoilState","props","setUser","toggleSidebar","sidebar_state","setSidebarState","useSidebarState","userState","useRecoilValue","location","useLocation","handleLogout","AppBar","elevation","style","background","color","position","id","Toolbar","pathname","IconButton","edge","onClick","aria-label","Button","className","component","Link","to","useState","username","password","loginDetails","setLoginDetails","waiting","setWaiting","React","open","message","snackBarState","setSnackBarState","Box","display","justifyContent","alignItems","Card","LinearProgress","CardContent","Typography","variant","gutterBottom","mt","TextField","size","onChange","e","target","value","label","CardActions","axios","method","url","process","data","then","response","catch","err","console","log","authenticate","marginLeft","disabled","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","name","email","confirmPassword","registrationDetails","setRegistrationDetails","ConfirmPassword","registerUser","pages","uri","state","List","getPages","map","page","ListItem","button","ListItemIcon","ListItemText","primary","Component","rest","render","App","exact","path","Hero","Login","Register","MainWrapper","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"mbAEaA,EAAeC,eAAK,CAC/BC,IAAK,eACLC,SAAS,IAGEC,EAAOH,eAAK,CACvBC,IAAK,OACLC,SAAS,I,QCAEE,EAAU,WAAK,IAAD,EACYC,yBAAeF,GAD3B,wBAEvB,OAFuB,M,gBCIZ,WAACG,GACZ,IAAMC,EAAUH,IACVI,EDZqB,WAAK,IAAD,EACUH,yBAAeN,GADzB,mBACxBU,EADwB,KACTC,EADS,KAE/B,OAAO,WACHA,GAAiBD,ICSCE,GAChBC,EAAYC,yBAAeV,GAC7BW,EAAWC,cASTC,EAAe,WACjBT,GAAQ,IAcZ,OACI,kBAACU,EAAA,EAAD,CAAQC,UAAW,EAAGC,MAAO,CAAEC,WAAY,cAAeC,MAAO,SAAWC,SAAS,SAASC,GAAG,eAC7F,kBAACC,EAAA,EAAD,KAC2B,SAAtBV,EAASW,SAxBd,kBAACC,EAAA,EAAD,CAAYC,KAAK,QAAQC,QAASpB,EAAea,MAAM,UAAUQ,aAAW,QACxE,kBAAC,IAAD,OAuB+C,KAC/C,kBAACC,EAAA,EAAD,CAAQC,UAAU,oCAAoCC,UAAWC,IAAMC,GAAG,IAAIb,MAAM,WAApF,QACCT,EAdL,kBAACkB,EAAA,EAAD,CAAQC,UAAU,mBAAmBH,QAASZ,EAAcK,MAAM,WAAlE,UAKA,kBAACS,EAAA,EAAD,CAAQC,UAAU,mBAAmBC,UAAWC,IAAMC,GAAG,SAASb,MAAM,WAAxE,YCnCG,aACX,OACI,0C,iGCYO,aACX,IAAId,EAAUH,IADG,EAEuB+B,mBAAS,CAAEC,SAAU,GAAIC,SAAU,KAF1D,mBAEVC,EAFU,KAEIC,EAFJ,OAGaJ,oBAAS,GAHtB,mBAGVK,EAHU,KAGDC,EAHC,OAIyBC,IAAMP,SAAS,CACrDQ,MAAM,EACNC,QAAS,KANI,mBAIVC,EAJU,KAIKC,EAJL,KA6BjB,OACI,kBAACC,EAAA,EAAD,CAAKxB,GAAG,gBAAgByB,QAAQ,OAAOC,eAAe,SAASC,WAAW,UACtE,kBAACC,EAAA,EAAD,CAAMpB,UAAU,aAAab,UAAW,GACnCsB,EAAU,kBAACY,EAAA,EAAD,MAAqB,KAChC,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,SACA,kBAACT,EAAA,EAAD,CAAKU,GAAI,GACL,kBAACC,EAAA,EAAD,CACI3B,UAAU,qBACVwB,QAAQ,WACRI,KAAK,QACLC,SAjBK,SAACC,GAC1BtB,EAAgB,CAAEH,SAAUyB,EAAEC,OAAOC,MAAO1B,SAAUC,EAAaD,YAiB/C0B,MAAOzB,EAAaF,SACpB4B,MAAM,aACV,kBAACN,EAAA,EAAD,CACI3B,UAAU,qBACVwB,QAAQ,WACRI,KAAK,QACLC,SArBK,SAACC,GAC1BtB,EAAgB,CAAEH,SAAUE,EAAaF,SAAUC,SAAUwB,EAAEC,OAAOC,SAqBlDA,MAAOzB,EAAaD,SACpB2B,MAAM,eAGlB,kBAACC,EAAA,EAAD,KACI,kBAACnC,EAAA,EAAD,CAAQE,UAAWC,IAAMC,GAAG,aAA5B,YACA,kBAACJ,EAAA,EAAD,CAAQF,QA3CJ,SAACiC,GACjBpB,GAAW,GC3BJ,YAAwB,IAAtBL,EAAqB,EAArBA,SAASC,EAAY,EAAZA,SACtB,OAAO6B,IAAM,CACTC,OAAO,OACPC,IAAI,GAAD,OAAIC,wCAAJ,eACHC,KAAK,CAAClC,WAASC,cAElBkC,MAAK,SAAAC,GAAQ,OAAEA,EAASF,QACxBG,OAAM,SAAAC,GAEH,OADAC,QAAQC,IAAIF,GACL,CAACA,IAAI,yBDmBZG,CAAavC,GACRiC,MAAK,SAACC,GACH,GAAIA,EAASE,IAGT,OAFA5B,EAAiB,CAAEH,MAAM,EAAMC,QAAS4B,EAASE,WACjDjC,GAAW,GAGflC,EAAQiE,OAkC0BrD,MAAO,CAAE2D,WAAY,QAAUzD,MAAM,UAAU0D,SAAUvC,EAASmB,KAAK,SAArG,UAEJ,kBAACqB,EAAA,EAAD,CACIC,aAAc,CAAEC,SAAU,SAAUC,WAAY,UAChDxC,KAAME,EAAcF,KACpByC,iBAAkB,IAClBC,QApDY,WACxBvC,EAAiB,CAAEH,MAAM,EAAOC,QAAS,MAoD7BA,QAASC,EAAcD,QACvB3C,IAAI,qB,QE/DT,G,OAAA,WAAO,IAAD,EACqCkC,mBAAS,CAAEmD,KAAM,GAAIlD,SAAU,GAAImD,MAAO,GAAIlD,SAAU,GAAImD,gBAAiB,KADlH,mBACVC,EADU,KACWC,EADX,OAEavD,oBAAS,GAFtB,mBAEVK,EAFU,KAEDC,EAFC,OAGyBC,IAAMP,SAAS,CACrDQ,MAAM,EACNC,QAAS,KALI,mBAGVC,EAHU,KAGKC,EAHL,KAoDjB,OACI,kBAACC,EAAA,EAAD,CAAKxB,GAAG,mBAAmByB,QAAQ,OAAOC,eAAe,SAASC,WAAW,UACzE,kBAACC,EAAA,EAAD,CAAMpB,UAAU,aAAab,UAAW,GACnCsB,EAAU,kBAACY,EAAA,EAAD,MAAqB,KAChC,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,SACA,kBAACT,EAAA,EAAD,CAAKU,GAAI,GACL,kBAACC,EAAA,EAAD,CACIH,QAAQ,WACRI,KAAK,QACL5B,UAAU,qBACV6B,SAzCC,SAACC,GACtB6B,EAAuB,2BAChBD,GADe,IAElBH,KAAMzB,EAAEC,OAAOC,UAuCCA,MAAO0B,EAAoBH,KAC3BtB,MAAM,cACV,kBAACN,EAAA,EAAD,CACIH,QAAQ,WACRI,KAAK,QACL5B,UAAU,qBACV6B,SApCK,SAACC,GAC1B6B,EAAuB,2BAChBD,GADe,IAElBrD,SAAUyB,EAAEC,OAAOC,UAkCHA,MAAO0B,EAAoBrD,SAC3B4B,MAAM,aACV,kBAACN,EAAA,EAAD,CACIH,QAAQ,WACRI,KAAK,QACL5B,UAAU,qBACV6B,SAjDE,SAACC,GACvB6B,EAAuB,2BAChBD,GADe,IAElBF,MAAO1B,EAAEC,OAAOC,UA+CAA,MAAO0B,EAAoBF,MAC3BvB,MAAM,UACV,kBAACN,EAAA,EAAD,CACIH,QAAQ,WACRI,KAAK,QACL5B,UAAU,qBACV6B,SA5CK,SAACC,GAC1B6B,EAAuB,2BAChBD,GADe,IAElBpD,SAAUwB,EAAEC,OAAOC,UA0CHA,MAAO0B,EAAoBpD,SAC3B2B,MAAM,aACV,kBAACN,EAAA,EAAD,CACIH,QAAQ,WACRI,KAAK,QACL5B,UAAU,qBACV6B,SA7CY,SAACC,GACjC6B,EAAuB,2BAChBD,GADe,IAElBD,gBAAiB3B,EAAEC,OAAOC,UA2CVA,MAAO0B,EAAoBE,gBAC3B3B,MAAM,uBAGlB,kBAACC,EAAA,EAAD,KACI,kBAACnC,EAAA,EAAD,CAAQE,UAAWC,IAAMC,GAAG,SAASyB,KAAK,SAA1C,SACA,kBAAC7B,EAAA,EAAD,CAAQF,QAxFD,WACnBa,GAAW,GCzBJ,YAA2D,IAAxD6C,EAAuD,EAAvDA,KAAMlD,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,SAAUmD,EAA6B,EAA7BA,gBAAiBD,EAAY,EAAZA,MAC3D,OAAOrB,IAAM,CACXC,OAAQ,OACRC,IAAI,GAAD,OAAKC,wCAAL,kBACHC,KAAM,CAAEgB,OAAMlD,WAAUmD,QAAOlD,WAAUmD,qBAExCjB,MAAK,SAACC,GAAD,OAAcA,EAASF,QAC5BG,OAAM,SAACC,GAEN,OADAC,QAAQC,IAAIF,GACL,CAAEA,IAAK,yBDiBZkB,CAAaH,GACRlB,MAAK,SAACC,GACH,GAAIA,EAASE,IAGT,OAFA5B,EAAiB,CAAEH,MAAM,EAAMC,QAAS4B,EAASE,WACjDjC,GAAW,GAGfkC,QAAQC,IAAIJ,OA+EyBrD,MAAO,CAAE2D,WAAY,QAAUzD,MAAM,UAAU0D,SAAUvC,EAASmB,KAAK,SAAxG,cAGR,kBAACqB,EAAA,EAAD,CACQC,aAAc,CAAEC,SAAU,SAAUC,WAAY,UAChDxC,KAAME,EAAcF,KACpByC,iBAAkB,IAClBC,QAlGY,WACxBvC,EAAiB,CAAEH,MAAM,EAAOC,QAAS,MAkG7BA,QAASC,EAAcD,QACvB3C,IAAI,qBE1HX4F,G,OAAQ,CACjB,CAACtE,GAAG,YAAY+D,KAAK,YAAYQ,IAAI,cACrC,CAACvE,GAAG,UAAU+D,KAAK,WAAWQ,IAAI,aAClC,CAACvE,GAAG,UAAU+D,KAAK,WAAWQ,IAAI,c,qDCUvB,aACX,IAAMC,EAAQlF,yBAAed,GAC7B,OACI,kBAACgD,EAAA,EAAD,CAAKxB,GAAG,UAASQ,UAAS,UAAKgE,EAAQ,OAAS,SAC5C,kBAACC,EAAA,EAAD,KACKC,OAMXA,EAAW,WACb,OAAOJ,EAAMK,KAAI,SAAAC,GACb,OACI,kBAACC,EAAA,EAAD,CAAUnG,IAAKkG,EAAK5E,GAAI8E,QAAM,GAC1B,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,OAEJ,kBAACC,EAAA,EAAD,CAAcC,QAASL,EAAKb,YC1B7B,G,OAAA,WACX,OACA,kBAACvC,EAAA,EAAD,CAAKxB,GAAG,eAAeyB,QAAQ,QAC3B,kBAAC,EAAD,MACA,kBAACD,EAAA,EAAD,KACI,wC,QCLG,cAAwC,IAA1B0D,EAAyB,EAApCzE,UAAyB0E,EAAW,6BAElD,OADgB7F,yBAAeV,GAExB,kBAAC,IAAD,iBAAWuG,EAAX,CAAiBC,OAAQ,SAAArG,GAAK,OAAI,kBAAC,IAAD,CAAU4B,GAAI,aADhC,kBAAC,IAAD,iBAAWwE,EAAX,CAAiBC,OAAQ,SAAArG,GAAW,OAAO,kBAACmG,EAAD,CAAWnG,OAAK,SCFvE,cAAwC,IAA1BmG,EAAyB,EAApCzE,UAAyB0E,EAAW,6BAElD,OADgB7F,yBAAeV,GAExB,kBAAC,IAAD,iBAAWuG,EAAX,CAAiBC,OAAQ,SAAArG,GAAK,OAAI,kBAACmG,EAAD,CAAWnG,OAAK,QADlC,kBAAC,IAAD,iBAAWoG,EAAX,CAAiBC,OAAQ,SAAArG,GAAW,OAAO,kBAAC,IAAD,CAAU4B,GAAG,gBCuBpE0E,MAlBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,aAAD,KACE,yBAAK7E,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8E,OAAK,EAACC,KAAK,IAAI9E,UAAW+E,IACjC,kBAAC,EAAD,CAAgBF,OAAK,EAACC,KAAK,SAAS9E,UAAWgF,IAC/C,kBAAC,EAAD,CAAgBH,OAAK,EAACC,KAAK,YAAY9E,UAAWiF,IAClD,kBAAC,EAAD,CAAiBJ,OAAK,EAACC,KAAK,OAAO9E,UAAWkF,SCVtCC,QACW,cAA7BC,OAAOtG,SAASuG,UAEe,UAA7BD,OAAOtG,SAASuG,UAEhBD,OAAOtG,SAASuG,SAASC,MACvB,2DCZNC,IAASZ,OACP,kBAAC,IAAMa,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtD,MAAK,SAAAuD,GACJA,EAAaC,gBAEdtD,OAAM,SAAAuD,GACLrD,QAAQqD,MAAMA,EAAMpF,c","file":"static/js/main.241a84f1.chunk.js","sourcesContent":["import { atom } from \"recoil\";\r\n\r\nexport const sidebarState = atom({\r\n  key: \"sidebarState\",\r\n  default: true,\r\n});\r\n\r\nexport const user = atom({\r\n  key: \"user\",\r\n  default: false,\r\n});\r\n","import { useRecoilState } from \"recoil\";\r\nimport { sidebarState,user } from \"./atom\";\r\n\r\nexport const useSidebarState = ()=>{\r\n    const [sidebar_state, setSidebarState] = useRecoilState(sidebarState);\r\n    return ()=>{\r\n        setSidebarState(!sidebar_state)\r\n    }\r\n}\r\nexport const useUser = ()=>{\r\n    const [user_state, setUserState] = useRecoilState(user)\r\n    return setUserState;\r\n}","import React from 'react';\r\nimport './header.css';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { useSidebarState, user, useUser } from '../../store';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useRecoilValue } from 'recoil';\r\n\r\n\r\n\r\nexport default (props) => {\r\n    const setUser = useUser()\r\n    const toggleSidebar = useSidebarState();\r\n    const userState = useRecoilValue(user);\r\n    let location = useLocation();\r\n    const toggleIcon = () => {\r\n        return (\r\n            <IconButton edge=\"start\" onClick={toggleSidebar} color=\"inherit\" aria-label=\"menu\">\r\n                <MenuIcon />\r\n            </IconButton>\r\n        )\r\n    }\r\n\r\n    const handleLogout = ()=>{\r\n        setUser(false);\r\n    }\r\n\r\n    const getLoggedInItems = () => {\r\n        return (\r\n            <Button className=\"custom-nav-links\" onClick={handleLogout} color=\"inherit\">Logout</Button>\r\n        )\r\n    }\r\n    const getLoggedOutItems = () => {\r\n        return (\r\n            <Button className=\"custom-nav-links\" component={Link} to=\"/login\" color=\"inherit\">Login</Button>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <AppBar elevation={0} style={{ background: 'transparent', color: \"black\" }} position=\"static\" id=\"main-header\">\r\n            <Toolbar>\r\n                {location.pathname === '/app' ? toggleIcon() : null}\r\n                <Button className=\"custom-home-link custom-nav-links\" component={Link} to=\"/\" color=\"inherit\">Home</Button>\r\n                {userState ? getLoggedInItems() : getLoggedOutItems()}\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default ()=>{\r\n    return(\r\n        <h1>Hero Page</h1>\r\n    )\r\n}","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport authenticate from './util/authenticate';\r\nimport './login.css'\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useUser } from '../../store'\r\nimport { Snackbar } from '@material-ui/core';\r\n\r\nexport default () => {\r\n    let setUser = useUser();\r\n    const [loginDetails, setLoginDetails] = useState({ username: '', password: '' });\r\n    const [waiting, setWaiting] = useState(false);\r\n    const [snackBarState, setSnackBarState] = React.useState({\r\n        open: false,\r\n        message: ''\r\n    });\r\n    const handleSnackbarClose = () => {\r\n        setSnackBarState({ open: false, message: '' });\r\n    }\r\n    const handleLogin = (e) => {\r\n        setWaiting(true)\r\n        authenticate(loginDetails)\r\n            .then((response) => {\r\n                if (response.err) {\r\n                    setSnackBarState({ open: true, message: response.err })\r\n                    setWaiting(false)\r\n                    return;\r\n                };\r\n                setUser(response)\r\n            })\r\n    }\r\n    const handleUsernameChange = (e) => {\r\n        setLoginDetails({ username: e.target.value, password: loginDetails.password })\r\n    }\r\n    const handlePasswordChange = (e) => {\r\n        setLoginDetails({ username: loginDetails.username, password: e.target.value })\r\n    }\r\n    return (\r\n        <Box id=\"login-wrapper\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n            <Card className=\"login-card\" elevation={0}>\r\n                {waiting ? <LinearProgress /> : null}\r\n                <CardContent>\r\n                    <Typography variant=\"h6\" gutterBottom>LOGIN</Typography>\r\n                    <Box mt={3}>\r\n                        <TextField\r\n                            className=\"custom-form-styles\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            onChange={handleUsernameChange}\r\n                            value={loginDetails.username}\r\n                            label=\"Username\" />\r\n                        <TextField\r\n                            className=\"custom-form-styles\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            onChange={handlePasswordChange}\r\n                            value={loginDetails.password}\r\n                            label=\"Password\" />\r\n                    </Box>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button component={Link} to='/register'>Register</Button>\r\n                    <Button onClick={handleLogin} style={{ marginLeft: 'auto' }} color=\"inherit\" disabled={waiting} size=\"small\">Login</Button>\r\n                </CardActions>\r\n                <Snackbar\r\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                    open={snackBarState.open}\r\n                    autoHideDuration={6000}\r\n                    onClose={handleSnackbarClose}\r\n                    message={snackBarState.message}\r\n                    key='loginResponse'\r\n                />\r\n            </Card>\r\n        </Box>\r\n    )\r\n}","import axios from 'axios';\r\nexport default ({username,password})=>{\r\n    return axios({\r\n        method:'POST',\r\n        url:`${process.env.REACT_APP_API_URI}/user/login`,\r\n        data:{username,password}\r\n    })\r\n    .then(response=>response.data)\r\n    .catch(err=>{\r\n        console.log(err)\r\n        return {err:'there was an error'}\r\n    })\r\n}","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './register.css';\r\nimport registerUser from './util/registerUser.js'\r\nimport { Snackbar } from '@material-ui/core';\r\n\r\nexport default () => {\r\n    const [registrationDetails, setRegistrationDetails] = useState({ name: '', username: '', email: '', password: '', confirmPassword: '' });\r\n    const [waiting, setWaiting] = useState(false)\r\n    const [snackBarState, setSnackBarState] = React.useState({\r\n        open: false,\r\n        message: ''\r\n    });\r\n    const handleSnackbarClose = () => {\r\n        setSnackBarState({ open: false, message: '' });\r\n    }\r\n    const handleRegister = () => {\r\n        setWaiting(true)\r\n        registerUser(registrationDetails)\r\n            .then((response) => {\r\n                if (response.err) {\r\n                    setSnackBarState({ open: true, message: response.err })\r\n                    setWaiting(false)\r\n                    return;\r\n                };\r\n                console.log(response)\r\n            })\r\n    }\r\n    const handleNameChange = (e) => {\r\n        setRegistrationDetails({\r\n            ...registrationDetails,\r\n            name: e.target.value,\r\n        })\r\n    }\r\n    const handleEmailChange = (e) => {\r\n        setRegistrationDetails({\r\n            ...registrationDetails,\r\n            email: e.target.value,\r\n        })\r\n    }\r\n    const handleUsernameChange = (e) => {\r\n        setRegistrationDetails({\r\n            ...registrationDetails,\r\n            username: e.target.value,\r\n        })\r\n    }\r\n    const handlePasswordChange = (e) => {\r\n        setRegistrationDetails({\r\n            ...registrationDetails,\r\n            password: e.target.value,\r\n        })\r\n    }\r\n    const handleConfirmPasswordChange = (e) => {\r\n        setRegistrationDetails({\r\n            ...registrationDetails,\r\n            confirmPassword: e.target.value,\r\n        })\r\n    }\r\n    return (\r\n        <Box id=\"register-wrapper\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n            <Card className=\"login-card\" elevation={0}>\r\n                {waiting ? <LinearProgress /> : null}\r\n                <CardContent>\r\n                    <Typography variant=\"h6\" gutterBottom>LOGIN</Typography>\r\n                    <Box mt={3}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            className=\"custom-form-styles\"\r\n                            onChange={handleNameChange}\r\n                            value={registrationDetails.name}\r\n                            label=\"Full Name\" />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            className=\"custom-form-styles\"\r\n                            onChange={handleUsernameChange}\r\n                            value={registrationDetails.username}\r\n                            label=\"Username\" />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            className=\"custom-form-styles\"\r\n                            onChange={handleEmailChange}\r\n                            value={registrationDetails.email}\r\n                            label=\"Email\" />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            className=\"custom-form-styles\"\r\n                            onChange={handlePasswordChange}\r\n                            value={registrationDetails.password}\r\n                            label=\"Password\" />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            className=\"custom-form-styles\"\r\n                            onChange={handleConfirmPasswordChange}\r\n                            value={registrationDetails.ConfirmPassword}\r\n                            label=\"Confirm Password\" />\r\n                    </Box>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button component={Link} to='/login' size=\"small\">Login</Button>\r\n                    <Button onClick={handleRegister} style={{ marginLeft: 'auto' }} color=\"inherit\" disabled={waiting} size=\"small\">REgister</Button>\r\n                </CardActions>\r\n            </Card>\r\n            <Snackbar\r\n                    anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n                    open={snackBarState.open}\r\n                    autoHideDuration={6000}\r\n                    onClose={handleSnackbarClose}\r\n                    message={snackBarState.message}\r\n                    key='loginResponse'\r\n                />\r\n        </Box>\r\n    )\r\n}","import axios from \"axios\";\r\nexport default ({ name, username, password, confirmPassword, email }) => {\r\n  return axios({\r\n    method: \"POST\",\r\n    url: `${process.env.REACT_APP_API_URI}/user/register`,\r\n    data: { name, username, email, password, confirmPassword },\r\n  })\r\n    .then((response) => response.data)\r\n    .catch((err) => {\r\n      console.log(err);\r\n      return { err: \"there was an error\" };\r\n    });\r\n};\r\n","export const pages = [\r\n    {id:\"dashboard\",name:\"Dashboard\",uri:\"/dashboard\"},\r\n    {id:\"product\",name:\"Products\",uri:\"/Products\"},\r\n    {id:\"setting\",name:\"Settings\",uri:\"/Setting\"},\r\n]","import React from 'react';\r\nimport \"./sidebar.css\";\r\nimport { sidebarState } from '../../store';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { pages } from '../../utils';\r\nimport Box from '@material-ui/core/Box';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/Listitem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\n\r\nexport default () => {\r\n    const state = useRecoilValue(sidebarState)\r\n    return (\r\n        <Box id=\"sidebar\"className={`${state ? \"open\" : \"hide\"}`}>\r\n            <List>\r\n                {getPages()}\r\n            </List>\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst getPages = () => {\r\n    return pages.map(page => {\r\n        return (\r\n            <ListItem key={page.id} button>\r\n                <ListItemIcon>\r\n                    <FiberManualRecordIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={page.name} />\r\n            </ListItem>\r\n        )\r\n    })\r\n}","import React from 'react';\r\nimport Sidebar from '../sidebar'\r\nimport './main.css';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default ()=>{\r\n    return (\r\n    <Box id=\"main-wrapper\" display=\"flex\">\r\n        <Sidebar></Sidebar>\r\n        <Box>\r\n            <h1>Test</h1>\r\n        </Box>\r\n    </Box>\r\n    )\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { user } from '../../../store';\r\nimport { useRecoilValue } from 'recoil';\r\n\r\nexport default ({ component: Component, ...rest }) => {\r\n    let userState = useRecoilValue(user);\r\n    if (!userState) return <Route {...rest} render={props => { return <Component props /> }}></Route>\r\n    return <Route {...rest} render={props => <Redirect to={'/app'} />}></Route>\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { user } from '../../../store';\r\nimport { useRecoilValue } from 'recoil';\r\n\r\nexport default ({ component: Component, ...rest }) => {\r\n    let userState = useRecoilValue(user);\r\n    if (!userState) return <Route {...rest} render={props => { return <Redirect to=\"/login\" /> }}></Route>\r\n    return <Route {...rest} render={props => <Component props />}></Route>\r\n}","import React from \"react\";\nimport \"./App.css\";\nimport { RecoilRoot } from \"recoil\";\nimport Header from \"./components/header\";\nimport Hero from \"./components/hero\";\nimport Login from \"./components/login\";\nimport Register from \"./components/register\";\nimport MainWrapper from \"./components/main\";\nimport ProtectedRoute from './components/util/protectedRoute';\nimport RedirectIfLogin from './components/util/redirectIfLoggedIn';\nimport { BrowserRouter as Router, Route,Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <RecoilRoot>\n        <div className=\"App\">\n          <Header></Header>\n          <Switch>\n            <Route exact path=\"/\" component={Hero}></Route>\n            <ProtectedRoute exact path=\"/login\" component={Login}></ProtectedRoute>\n            <ProtectedRoute exact path=\"/register\" component={Register}></ProtectedRoute>\n            <RedirectIfLogin exact path=\"/app\" component={MainWrapper}></RedirectIfLogin>\n          </Switch>\n        </div>\n      </RecoilRoot>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}